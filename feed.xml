<feed xmlns="http://www.w3.org/2005/Atom"> <id>/</id><title>Kamna</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2024-03-28T01:55:53+00:00</updated> <author> <name>kamna</name> <uri>/</uri> </author><link rel="self" type="application/atom+xml" href="/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="/"/> <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator> <rights> © 2024 kamna </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Mastering Asynchronous Programming with Kotlin Coroutines — Part 1</title><link href="/posts/ff56d35a891f/" rel="alternate" type="text/html" title="Mastering Asynchronous Programming with Kotlin Coroutines — Part 1" /><published>2024-03-25T21:13:00+00:00</published> <updated>2024-03-25T21:13:00+00:00</updated> <id>/posts/ff56d35a891f/</id> <content src="/posts/ff56d35a891f/" /> <author> <name>Kamna Garg</name> </author> <summary> Mastering Asynchronous Programming with Kotlin Coroutines — Part 1 Welcome to mastering Asynchronous Programming with Kotlin Coroutines — Part 1. In this article, we’re going to cover coroutine basics, coroutine usage, and coroutine builders launch , async , and runBlocking . Introduction to Coroutines When an app starts, it initiates a main thread responsible for handling lightweight ta... </summary> </entry> <entry><title>Demystifying Kubernetes: Part 1</title><link href="/posts/40902c487f04/" rel="alternate" type="text/html" title="Demystifying Kubernetes: Part 1" /><published>2023-07-22T11:13:36+00:00</published> <updated>2023-07-22T13:59:33+00:00</updated> <id>/posts/40902c487f04/</id> <content src="/posts/40902c487f04/" /> <author> <name>Kamna Garg</name> </author> <summary> Demystifying Kubernetes: Part 1 In the last blog , we discussed docker using which you can package your application along with all its dependencies as images and you can directly run those images in containers. But running containers is not everything, you need some kind of a tool to up/downscale or monitor them. So we need a tool to harness the power of containers, That’s where Kubernetes do... </summary> </entry> <entry><title>Database Isolation levels</title><link href="/posts/c27eb9b33217/" rel="alternate" type="text/html" title="Database Isolation levels" /><published>2023-07-18T17:15:16+00:00</published> <updated>2023-07-18T17:16:52+00:00</updated> <id>/posts/c27eb9b33217/</id> <content src="/posts/c27eb9b33217/" /> <author> <name>Kamna Garg</name> </author> <summary> Database Isolation levels Image source: Google Managing queries on a database becomes challenging when multiple users are trying to fetch/update information concurrently. As your application grows and attracts more users, there is a need to ensure integrity and prevent conflicts. Here database locking comes into the picture to address these concerns. It is one of the fundamental aspect of t... </summary> </entry> <entry><title>Learn Docker through Hands-on Examples</title><link href="/posts/496955847700/" rel="alternate" type="text/html" title="Learn Docker through Hands-on Examples" /><published>2023-07-11T20:56:44+00:00</published> <updated>2023-07-11T20:56:44+00:00</updated> <id>/posts/496955847700/</id> <content src="/posts/496955847700/" /> <author> <name>Kamna Garg</name> </author> <summary> Learn Docker through Hands-on Examples Image Source: Google Docker is a software platform that allows you to build, test, and deploy applications quickly. Docker packages software into standardized units called containers that have everything the software needs to run including libraries, system tools, code, and runtime. Containers Now the next question is what is a container and what... </summary> </entry> <entry><title>Understanding Mutex in Go</title><link href="/posts/5f41199085b9/" rel="alternate" type="text/html" title="Understanding Mutex in Go" /><published>2023-07-07T19:27:52+00:00</published> <updated>2023-07-07T19:27:52+00:00</updated> <id>/posts/5f41199085b9/</id> <content src="/posts/5f41199085b9/" /> <author> <name>Kamna Garg</name> </author> <summary> Understanding Mutex in Go Image source: google Introduction In concurrent programming, ensuring data integrity and preventing race conditions is crucial. In Go, the sync.Mutex type provides a simple and effective way to achieve mutual exclusion and control concurrent access to shared resources. In this blog post, we will explore the concept of mutexes, understand how to use them in Go, and ... </summary> </entry> </feed>
